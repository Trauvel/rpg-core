import { Server } from "socket.io";
import { EventBus } from "./core/eventBus";
import { ActionProcessor } from "./core/actionProcessor";
import { StateManager } from "./core/stateManager";
import { GameEvent } from '@rpg-platform/shared';
import { SessionManager } from "./services/sessionManager";

export function setupSocket(io: Server, eventBus: EventBus, actionProcessor: ActionProcessor, stateManager: StateManager) {
  io.on("connection", (socket) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
    if (!socket.data.authenticated || !socket.data.user) {
      console.log(`‚ùå Unauthenticated connection attempt from ${socket.id}`);
      socket.disconnect();
      return;
    }

    const user = socket.data.user;
    console.log(`‚úÖ New game connection: ${user.username} (${user.userId}) on socket ${socket.id}`);

    // –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–≤—É—é —Å–µ—Å—Å–∏—é
    const session = SessionManager.createOrUpdateSession(user, socket.id);
    console.log(`üìù Session created/updated for ${session.username}`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    eventBus.emit(GameEvent.PLAYER_CONNECT, {
      socket_id: socket.id,
      userId: user.userId,
      username: user.username,
    });

    socket.on("playerAction", (data) => {
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      SessionManager.updateActivity(user.userId);

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      data.data.socket_id = socket.id;
      data.data.userId = user.userId;
      data.data.username = user.username;
      actionProcessor.process(data.action, data.data);
    });

    socket.on("disconnect", () => {
      console.log(`üëã User disconnected: ${user.username} (${socket.id})`);
      
      // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é
      SessionManager.removeSession(user.userId);
      console.log(`üìù Session removed for ${user.username}`);
      
      eventBus.emit(GameEvent.PLAYER_LEAVE, { 
        id: socket.id,
        userId: user.userId,
      });
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    socket.emit(GameEvent.STATE_CHANGED, stateManager.getState());
  });
}